// Copyright 2019 Radiation Detection and Imaging (RDI), LLC
// Use of this source code is governed by the BSD 3-clause
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/rdi/detmap/map.proto

package detmap

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HpsConfig_Mode int32

const (
	HpsConfig_CURRENT HpsConfig_Mode = 0
	HpsConfig_PULSED  HpsConfig_Mode = 1
)

var HpsConfig_Mode_name = map[int32]string{
	0: "CURRENT",
	1: "PULSED",
}

var HpsConfig_Mode_value = map[string]int32{
	"CURRENT": 0,
	"PULSED":  1,
}

func (x HpsConfig_Mode) String() string {
	return proto.EnumName(HpsConfig_Mode_name, int32(x))
}

func (HpsConfig_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{1, 0}
}

type DetectorConfig_ImageConfig_Convolution int32

const (
	DetectorConfig_ImageConfig_NONE      DetectorConfig_ImageConfig_Convolution = 0
	DetectorConfig_ImageConfig_DIFFUSION DetectorConfig_ImageConfig_Convolution = 1
)

var DetectorConfig_ImageConfig_Convolution_name = map[int32]string{
	0: "NONE",
	1: "DIFFUSION",
}

var DetectorConfig_ImageConfig_Convolution_value = map[string]int32{
	"NONE":      0,
	"DIFFUSION": 1,
}

func (x DetectorConfig_ImageConfig_Convolution) String() string {
	return proto.EnumName(DetectorConfig_ImageConfig_Convolution_name, int32(x))
}

func (DetectorConfig_ImageConfig_Convolution) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{3, 0, 0}
}

type Map struct {
	// hps_config maps a 32-bit HPS configuration id number to a description of
	// the configuration.  An HPS configuration is common to HPSs in the same
	// slot in multiple detectors of the same design.
	HpsConfig            map[uint32]*HpsConfig      `protobuf:"bytes,1,rep,name=hps_config,json=hpsConfig,proto3" json:"hps_config,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	HpsCalibration       map[uint32]*HpsCalibration `protobuf:"bytes,2,rep,name=hps_calibration,json=hpsCalibration,proto3" json:"hps_calibration,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DetConfig            map[uint32]*DetectorConfig `protobuf:"bytes,3,rep,name=det_config,json=detConfig,proto3" json:"det_config,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Map) Reset()         { *m = Map{} }
func (m *Map) String() string { return proto.CompactTextString(m) }
func (*Map) ProtoMessage()    {}
func (*Map) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{0}
}

func (m *Map) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Map.Unmarshal(m, b)
}
func (m *Map) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Map.Marshal(b, m, deterministic)
}
func (m *Map) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Map.Merge(m, src)
}
func (m *Map) XXX_Size() int {
	return xxx_messageInfo_Map.Size(m)
}
func (m *Map) XXX_DiscardUnknown() {
	xxx_messageInfo_Map.DiscardUnknown(m)
}

var xxx_messageInfo_Map proto.InternalMessageInfo

func (m *Map) GetHpsConfig() map[uint32]*HpsConfig {
	if m != nil {
		return m.HpsConfig
	}
	return nil
}

func (m *Map) GetHpsCalibration() map[uint32]*HpsCalibration {
	if m != nil {
		return m.HpsCalibration
	}
	return nil
}

func (m *Map) GetDetConfig() map[uint32]*DetectorConfig {
	if m != nil {
		return m.DetConfig
	}
	return nil
}

type HpsConfig struct {
	NChannels            uint32                              `protobuf:"varint,1,opt,name=n_channels,json=nChannels,proto3" json:"n_channels,omitempty"`
	Channel              map[uint32]*HpsConfig_ChannelConfig `protobuf:"bytes,2,rep,name=channel,proto3" json:"channel,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CurrentConv          float32                             `protobuf:"fixed32,3,opt,name=current_conv,json=currentConv,proto3" json:"current_conv,omitempty"`
	Mode                 HpsConfig_Mode                      `protobuf:"varint,4,opt,name=mode,proto3,enum=rdi.detmap.HpsConfig_Mode" json:"mode,omitempty"`
	DetConfig            uint32                              `protobuf:"varint,5,opt,name=det_config,json=detConfig,proto3" json:"det_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *HpsConfig) Reset()         { *m = HpsConfig{} }
func (m *HpsConfig) String() string { return proto.CompactTextString(m) }
func (*HpsConfig) ProtoMessage()    {}
func (*HpsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{1}
}

func (m *HpsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HpsConfig.Unmarshal(m, b)
}
func (m *HpsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HpsConfig.Marshal(b, m, deterministic)
}
func (m *HpsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HpsConfig.Merge(m, src)
}
func (m *HpsConfig) XXX_Size() int {
	return xxx_messageInfo_HpsConfig.Size(m)
}
func (m *HpsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HpsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HpsConfig proto.InternalMessageInfo

func (m *HpsConfig) GetNChannels() uint32 {
	if m != nil {
		return m.NChannels
	}
	return 0
}

func (m *HpsConfig) GetChannel() map[uint32]*HpsConfig_ChannelConfig {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *HpsConfig) GetCurrentConv() float32 {
	if m != nil {
		return m.CurrentConv
	}
	return 0
}

func (m *HpsConfig) GetMode() HpsConfig_Mode {
	if m != nil {
		return m.Mode
	}
	return HpsConfig_CURRENT
}

func (m *HpsConfig) GetDetConfig() uint32 {
	if m != nil {
		return m.DetConfig
	}
	return 0
}

type HpsConfig_ChannelConfig struct {
	Axis        uint32 `protobuf:"varint,1,opt,name=axis,proto3" json:"axis,omitempty"`
	AxisChannel uint32 `protobuf:"varint,2,opt,name=axis_channel,json=axisChannel,proto3" json:"axis_channel,omitempty"`
	// list of pad coordinates connected to this channel
	PadX                 []float32 `protobuf:"fixed32,3,rep,packed,name=pad_x,json=padX,proto3" json:"pad_x,omitempty"`
	PadY                 []float32 `protobuf:"fixed32,4,rep,packed,name=pad_y,json=padY,proto3" json:"pad_y,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *HpsConfig_ChannelConfig) Reset()         { *m = HpsConfig_ChannelConfig{} }
func (m *HpsConfig_ChannelConfig) String() string { return proto.CompactTextString(m) }
func (*HpsConfig_ChannelConfig) ProtoMessage()    {}
func (*HpsConfig_ChannelConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{1, 0}
}

func (m *HpsConfig_ChannelConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HpsConfig_ChannelConfig.Unmarshal(m, b)
}
func (m *HpsConfig_ChannelConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HpsConfig_ChannelConfig.Marshal(b, m, deterministic)
}
func (m *HpsConfig_ChannelConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HpsConfig_ChannelConfig.Merge(m, src)
}
func (m *HpsConfig_ChannelConfig) XXX_Size() int {
	return xxx_messageInfo_HpsConfig_ChannelConfig.Size(m)
}
func (m *HpsConfig_ChannelConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_HpsConfig_ChannelConfig.DiscardUnknown(m)
}

var xxx_messageInfo_HpsConfig_ChannelConfig proto.InternalMessageInfo

func (m *HpsConfig_ChannelConfig) GetAxis() uint32 {
	if m != nil {
		return m.Axis
	}
	return 0
}

func (m *HpsConfig_ChannelConfig) GetAxisChannel() uint32 {
	if m != nil {
		return m.AxisChannel
	}
	return 0
}

func (m *HpsConfig_ChannelConfig) GetPadX() []float32 {
	if m != nil {
		return m.PadX
	}
	return nil
}

func (m *HpsConfig_ChannelConfig) GetPadY() []float32 {
	if m != nil {
		return m.PadY
	}
	return nil
}

type HpsCalibration struct {
	CurrentConv          []float32 `protobuf:"fixed32,1,rep,packed,name=current_conv,json=currentConv,proto3" json:"current_conv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *HpsCalibration) Reset()         { *m = HpsCalibration{} }
func (m *HpsCalibration) String() string { return proto.CompactTextString(m) }
func (*HpsCalibration) ProtoMessage()    {}
func (*HpsCalibration) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{2}
}

func (m *HpsCalibration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HpsCalibration.Unmarshal(m, b)
}
func (m *HpsCalibration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HpsCalibration.Marshal(b, m, deterministic)
}
func (m *HpsCalibration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HpsCalibration.Merge(m, src)
}
func (m *HpsCalibration) XXX_Size() int {
	return xxx_messageInfo_HpsCalibration.Size(m)
}
func (m *HpsCalibration) XXX_DiscardUnknown() {
	xxx_messageInfo_HpsCalibration.DiscardUnknown(m)
}

var xxx_messageInfo_HpsCalibration proto.InternalMessageInfo

func (m *HpsCalibration) GetCurrentConv() []float32 {
	if m != nil {
		return m.CurrentConv
	}
	return nil
}

type DetectorConfig struct {
	Name                 string                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ImageConfig          []*DetectorConfig_ImageConfig `protobuf:"bytes,2,rep,name=image_config,json=imageConfig,proto3" json:"image_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *DetectorConfig) Reset()         { *m = DetectorConfig{} }
func (m *DetectorConfig) String() string { return proto.CompactTextString(m) }
func (*DetectorConfig) ProtoMessage()    {}
func (*DetectorConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{3}
}

func (m *DetectorConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectorConfig.Unmarshal(m, b)
}
func (m *DetectorConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectorConfig.Marshal(b, m, deterministic)
}
func (m *DetectorConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectorConfig.Merge(m, src)
}
func (m *DetectorConfig) XXX_Size() int {
	return xxx_messageInfo_DetectorConfig.Size(m)
}
func (m *DetectorConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectorConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DetectorConfig proto.InternalMessageInfo

func (m *DetectorConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DetectorConfig) GetImageConfig() []*DetectorConfig_ImageConfig {
	if m != nil {
		return m.ImageConfig
	}
	return nil
}

type DetectorConfig_ImageConfig struct {
	Geometry    []*DetectorConfig_ImageConfig_Geometry    `protobuf:"bytes,1,rep,name=geometry,proto3" json:"geometry,omitempty"`
	ChannelList []*DetectorConfig_ImageConfig_ChannelDesc `protobuf:"bytes,2,rep,name=channel_list,json=channelList,proto3" json:"channel_list,omitempty"`
	G           []*DetectorConfig_ImageConfig_MatrixRow   `protobuf:"bytes,3,rep,name=g,proto3" json:"g,omitempty"`
	LinEstT     []*DetectorConfig_ImageConfig_MatrixRow   `protobuf:"bytes,4,rep,name=lin_est_t,json=linEstT,proto3" json:"lin_est_t,omitempty"`
	XPos        []float32                                 `protobuf:"fixed32,5,rep,packed,name=x_pos,json=xPos,proto3" json:"x_pos,omitempty"`
	YPos        []float32                                 `protobuf:"fixed32,6,rep,packed,name=y_pos,json=yPos,proto3" json:"y_pos,omitempty"`
	Conv        DetectorConfig_ImageConfig_Convolution    `protobuf:"varint,7,opt,name=conv,proto3,enum=rdi.detmap.DetectorConfig_ImageConfig_Convolution" json:"conv,omitempty"`
	// max diffusion sigma for diffusion convolution
	MaxDiffSigma         float32  `protobuf:"fixed32,8,opt,name=max_diff_sigma,json=maxDiffSigma,proto3" json:"max_diff_sigma,omitempty"`
	SigmaL2              float32  `protobuf:"fixed32,9,opt,name=sigma_l2,json=sigmaL2,proto3" json:"sigma_l2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectorConfig_ImageConfig) Reset()         { *m = DetectorConfig_ImageConfig{} }
func (m *DetectorConfig_ImageConfig) String() string { return proto.CompactTextString(m) }
func (*DetectorConfig_ImageConfig) ProtoMessage()    {}
func (*DetectorConfig_ImageConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{3, 0}
}

func (m *DetectorConfig_ImageConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectorConfig_ImageConfig.Unmarshal(m, b)
}
func (m *DetectorConfig_ImageConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectorConfig_ImageConfig.Marshal(b, m, deterministic)
}
func (m *DetectorConfig_ImageConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectorConfig_ImageConfig.Merge(m, src)
}
func (m *DetectorConfig_ImageConfig) XXX_Size() int {
	return xxx_messageInfo_DetectorConfig_ImageConfig.Size(m)
}
func (m *DetectorConfig_ImageConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectorConfig_ImageConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DetectorConfig_ImageConfig proto.InternalMessageInfo

func (m *DetectorConfig_ImageConfig) GetGeometry() []*DetectorConfig_ImageConfig_Geometry {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *DetectorConfig_ImageConfig) GetChannelList() []*DetectorConfig_ImageConfig_ChannelDesc {
	if m != nil {
		return m.ChannelList
	}
	return nil
}

func (m *DetectorConfig_ImageConfig) GetG() []*DetectorConfig_ImageConfig_MatrixRow {
	if m != nil {
		return m.G
	}
	return nil
}

func (m *DetectorConfig_ImageConfig) GetLinEstT() []*DetectorConfig_ImageConfig_MatrixRow {
	if m != nil {
		return m.LinEstT
	}
	return nil
}

func (m *DetectorConfig_ImageConfig) GetXPos() []float32 {
	if m != nil {
		return m.XPos
	}
	return nil
}

func (m *DetectorConfig_ImageConfig) GetYPos() []float32 {
	if m != nil {
		return m.YPos
	}
	return nil
}

func (m *DetectorConfig_ImageConfig) GetConv() DetectorConfig_ImageConfig_Convolution {
	if m != nil {
		return m.Conv
	}
	return DetectorConfig_ImageConfig_NONE
}

func (m *DetectorConfig_ImageConfig) GetMaxDiffSigma() float32 {
	if m != nil {
		return m.MaxDiffSigma
	}
	return 0
}

func (m *DetectorConfig_ImageConfig) GetSigmaL2() float32 {
	if m != nil {
		return m.SigmaL2
	}
	return 0
}

type DetectorConfig_ImageConfig_Geometry struct {
	N                    uint32   `protobuf:"varint,1,opt,name=n,proto3" json:"n,omitempty"`
	M                    uint32   `protobuf:"varint,2,opt,name=m,proto3" json:"m,omitempty"`
	Pitch                float32  `protobuf:"fixed32,3,opt,name=pitch,proto3" json:"pitch,omitempty"`
	XOffset              float32  `protobuf:"fixed32,4,opt,name=x_offset,json=xOffset,proto3" json:"x_offset,omitempty"`
	YOffset              float32  `protobuf:"fixed32,5,opt,name=y_offset,json=yOffset,proto3" json:"y_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectorConfig_ImageConfig_Geometry) Reset()         { *m = DetectorConfig_ImageConfig_Geometry{} }
func (m *DetectorConfig_ImageConfig_Geometry) String() string { return proto.CompactTextString(m) }
func (*DetectorConfig_ImageConfig_Geometry) ProtoMessage()    {}
func (*DetectorConfig_ImageConfig_Geometry) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{3, 0, 0}
}

func (m *DetectorConfig_ImageConfig_Geometry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectorConfig_ImageConfig_Geometry.Unmarshal(m, b)
}
func (m *DetectorConfig_ImageConfig_Geometry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectorConfig_ImageConfig_Geometry.Marshal(b, m, deterministic)
}
func (m *DetectorConfig_ImageConfig_Geometry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectorConfig_ImageConfig_Geometry.Merge(m, src)
}
func (m *DetectorConfig_ImageConfig_Geometry) XXX_Size() int {
	return xxx_messageInfo_DetectorConfig_ImageConfig_Geometry.Size(m)
}
func (m *DetectorConfig_ImageConfig_Geometry) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectorConfig_ImageConfig_Geometry.DiscardUnknown(m)
}

var xxx_messageInfo_DetectorConfig_ImageConfig_Geometry proto.InternalMessageInfo

func (m *DetectorConfig_ImageConfig_Geometry) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *DetectorConfig_ImageConfig_Geometry) GetM() uint32 {
	if m != nil {
		return m.M
	}
	return 0
}

func (m *DetectorConfig_ImageConfig_Geometry) GetPitch() float32 {
	if m != nil {
		return m.Pitch
	}
	return 0
}

func (m *DetectorConfig_ImageConfig_Geometry) GetXOffset() float32 {
	if m != nil {
		return m.XOffset
	}
	return 0
}

func (m *DetectorConfig_ImageConfig_Geometry) GetYOffset() float32 {
	if m != nil {
		return m.YOffset
	}
	return 0
}

type DetectorConfig_ImageConfig_ChannelDesc struct {
	Hps                  uint32   `protobuf:"varint,1,opt,name=hps,proto3" json:"hps,omitempty"`
	Chan                 uint32   `protobuf:"varint,2,opt,name=chan,proto3" json:"chan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetectorConfig_ImageConfig_ChannelDesc) Reset() {
	*m = DetectorConfig_ImageConfig_ChannelDesc{}
}
func (m *DetectorConfig_ImageConfig_ChannelDesc) String() string { return proto.CompactTextString(m) }
func (*DetectorConfig_ImageConfig_ChannelDesc) ProtoMessage()    {}
func (*DetectorConfig_ImageConfig_ChannelDesc) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{3, 0, 1}
}

func (m *DetectorConfig_ImageConfig_ChannelDesc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectorConfig_ImageConfig_ChannelDesc.Unmarshal(m, b)
}
func (m *DetectorConfig_ImageConfig_ChannelDesc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectorConfig_ImageConfig_ChannelDesc.Marshal(b, m, deterministic)
}
func (m *DetectorConfig_ImageConfig_ChannelDesc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectorConfig_ImageConfig_ChannelDesc.Merge(m, src)
}
func (m *DetectorConfig_ImageConfig_ChannelDesc) XXX_Size() int {
	return xxx_messageInfo_DetectorConfig_ImageConfig_ChannelDesc.Size(m)
}
func (m *DetectorConfig_ImageConfig_ChannelDesc) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectorConfig_ImageConfig_ChannelDesc.DiscardUnknown(m)
}

var xxx_messageInfo_DetectorConfig_ImageConfig_ChannelDesc proto.InternalMessageInfo

func (m *DetectorConfig_ImageConfig_ChannelDesc) GetHps() uint32 {
	if m != nil {
		return m.Hps
	}
	return 0
}

func (m *DetectorConfig_ImageConfig_ChannelDesc) GetChan() uint32 {
	if m != nil {
		return m.Chan
	}
	return 0
}

type DetectorConfig_ImageConfig_MatrixRow struct {
	Array                []float32 `protobuf:"fixed32,1,rep,packed,name=array,proto3" json:"array,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DetectorConfig_ImageConfig_MatrixRow) Reset()         { *m = DetectorConfig_ImageConfig_MatrixRow{} }
func (m *DetectorConfig_ImageConfig_MatrixRow) String() string { return proto.CompactTextString(m) }
func (*DetectorConfig_ImageConfig_MatrixRow) ProtoMessage()    {}
func (*DetectorConfig_ImageConfig_MatrixRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b65d484bb8b6a20, []int{3, 0, 2}
}

func (m *DetectorConfig_ImageConfig_MatrixRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetectorConfig_ImageConfig_MatrixRow.Unmarshal(m, b)
}
func (m *DetectorConfig_ImageConfig_MatrixRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetectorConfig_ImageConfig_MatrixRow.Marshal(b, m, deterministic)
}
func (m *DetectorConfig_ImageConfig_MatrixRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetectorConfig_ImageConfig_MatrixRow.Merge(m, src)
}
func (m *DetectorConfig_ImageConfig_MatrixRow) XXX_Size() int {
	return xxx_messageInfo_DetectorConfig_ImageConfig_MatrixRow.Size(m)
}
func (m *DetectorConfig_ImageConfig_MatrixRow) XXX_DiscardUnknown() {
	xxx_messageInfo_DetectorConfig_ImageConfig_MatrixRow.DiscardUnknown(m)
}

var xxx_messageInfo_DetectorConfig_ImageConfig_MatrixRow proto.InternalMessageInfo

func (m *DetectorConfig_ImageConfig_MatrixRow) GetArray() []float32 {
	if m != nil {
		return m.Array
	}
	return nil
}

func init() {
	proto.RegisterEnum("rdi.detmap.HpsConfig_Mode", HpsConfig_Mode_name, HpsConfig_Mode_value)
	proto.RegisterEnum("rdi.detmap.DetectorConfig_ImageConfig_Convolution", DetectorConfig_ImageConfig_Convolution_name, DetectorConfig_ImageConfig_Convolution_value)
	proto.RegisterType((*Map)(nil), "rdi.detmap.Map")
	proto.RegisterMapType((map[uint32]*DetectorConfig)(nil), "rdi.detmap.Map.DetConfigEntry")
	proto.RegisterMapType((map[uint32]*HpsCalibration)(nil), "rdi.detmap.Map.HpsCalibrationEntry")
	proto.RegisterMapType((map[uint32]*HpsConfig)(nil), "rdi.detmap.Map.HpsConfigEntry")
	proto.RegisterType((*HpsConfig)(nil), "rdi.detmap.HpsConfig")
	proto.RegisterMapType((map[uint32]*HpsConfig_ChannelConfig)(nil), "rdi.detmap.HpsConfig.ChannelEntry")
	proto.RegisterType((*HpsConfig_ChannelConfig)(nil), "rdi.detmap.HpsConfig.ChannelConfig")
	proto.RegisterType((*HpsCalibration)(nil), "rdi.detmap.HpsCalibration")
	proto.RegisterType((*DetectorConfig)(nil), "rdi.detmap.DetectorConfig")
	proto.RegisterType((*DetectorConfig_ImageConfig)(nil), "rdi.detmap.DetectorConfig.ImageConfig")
	proto.RegisterType((*DetectorConfig_ImageConfig_Geometry)(nil), "rdi.detmap.DetectorConfig.ImageConfig.Geometry")
	proto.RegisterType((*DetectorConfig_ImageConfig_ChannelDesc)(nil), "rdi.detmap.DetectorConfig.ImageConfig.ChannelDesc")
	proto.RegisterType((*DetectorConfig_ImageConfig_MatrixRow)(nil), "rdi.detmap.DetectorConfig.ImageConfig.MatrixRow")
}

func init() { proto.RegisterFile("proto/rdi/detmap/map.proto", fileDescriptor_5b65d484bb8b6a20) }

var fileDescriptor_5b65d484bb8b6a20 = []byte{
	// 809 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0xdd, 0x8f, 0xea, 0x44,
	0x14, 0xbf, 0x85, 0xf2, 0xd1, 0x53, 0x16, 0xc9, 0x5c, 0x4d, 0x6a, 0x13, 0x95, 0xcb, 0x35, 0x37,
	0x24, 0x26, 0xe5, 0x86, 0x7d, 0x51, 0xa3, 0x3e, 0x08, 0xac, 0x12, 0x81, 0xbd, 0x29, 0x4b, 0xb2,
	0x9a, 0x98, 0x66, 0x96, 0x0e, 0x30, 0xb1, 0x5f, 0x69, 0x67, 0xb1, 0xfd, 0x27, 0x7d, 0xf6, 0xcd,
	0x37, 0xff, 0x0e, 0x33, 0xd3, 0x29, 0x94, 0x5d, 0x34, 0x78, 0x9f, 0x98, 0x73, 0xce, 0xcc, 0x8f,
	0xdf, 0xf9, 0x9d, 0x8f, 0x82, 0x19, 0xc5, 0x21, 0x0b, 0x07, 0xb1, 0x4b, 0x07, 0x2e, 0x61, 0x3e,
	0x8e, 0x06, 0x3e, 0x8e, 0x2c, 0xe1, 0x44, 0x10, 0xbb, 0xd4, 0xca, 0xbd, 0xbd, 0xbf, 0xaa, 0x50,
	0x9d, 0xe3, 0x08, 0x7d, 0x0b, 0xb0, 0x8b, 0x12, 0x67, 0x1d, 0x06, 0x1b, 0xba, 0x35, 0x94, 0x6e,
	0xb5, 0xaf, 0x0f, 0x3f, 0xb5, 0x8e, 0x17, 0xad, 0x39, 0x8e, 0xac, 0x1f, 0xa3, 0x64, 0x24, 0x2e,
	0x4c, 0x02, 0x16, 0x67, 0xb6, 0xb6, 0x2b, 0x6c, 0x34, 0x83, 0x0f, 0xc4, 0x73, 0xec, 0xd1, 0x87,
	0x18, 0x33, 0x1a, 0x06, 0x46, 0x45, 0x60, 0xbc, 0x3e, 0x87, 0x71, 0xbc, 0x95, 0x03, 0xb5, 0x77,
	0x27, 0x4e, 0x4e, 0xc6, 0x25, 0xac, 0x20, 0x53, 0x3d, 0x4f, 0x66, 0x4c, 0xd8, 0x09, 0x19, 0xb7,
	0xb0, 0xcd, 0x25, 0xb4, 0x4f, 0x99, 0xa2, 0x0e, 0x54, 0x7f, 0x23, 0x99, 0xa1, 0x74, 0x95, 0xfe,
	0x95, 0xcd, 0x8f, 0xe8, 0x0b, 0xa8, 0xed, 0xb1, 0xf7, 0x48, 0x8c, 0x4a, 0x57, 0xe9, 0xeb, 0xc3,
	0x8f, 0xca, 0xe8, 0x87, 0xc7, 0x76, 0x7e, 0xe7, 0xeb, 0xca, 0x97, 0x8a, 0xf9, 0x2b, 0xbc, 0x3c,
	0x43, 0xfd, 0x0c, 0xf2, 0xdb, 0x53, 0x64, 0xf3, 0x29, 0xf2, 0x11, 0xa1, 0x0c, 0x7f, 0x0f, 0xed,
	0xd3, 0x84, 0xfe, 0x27, 0xf2, 0x98, 0x30, 0xb2, 0x66, 0x61, 0xfc, 0x8c, 0x78, 0xef, 0x8f, 0x2a,
	0x68, 0x87, 0x8c, 0xd0, 0x27, 0x00, 0x81, 0xb3, 0xde, 0xe1, 0x20, 0x20, 0x5e, 0x22, 0xc1, 0xb5,
	0x60, 0x24, 0x1d, 0xe8, 0x1b, 0x68, 0xc8, 0xa0, 0xac, 0x5f, 0xef, 0xac, 0x30, 0x96, 0x7c, 0x90,
	0x4b, 0x5f, 0x3c, 0x41, 0xaf, 0xa0, 0xb5, 0x7e, 0x8c, 0x63, 0x12, 0x88, 0xda, 0xed, 0x8d, 0x6a,
	0x57, 0xe9, 0x57, 0x6c, 0x5d, 0xfa, 0x46, 0x61, 0xb0, 0x47, 0x16, 0xa8, 0x7e, 0xe8, 0x12, 0x43,
	0xed, 0x2a, 0xfd, 0xf6, 0x73, 0x71, 0x72, 0xf4, 0x79, 0xe8, 0x12, 0x5b, 0xdc, 0xe3, 0x7c, 0x4b,
	0xad, 0x50, 0xcb, 0xf9, 0x1e, 0x4b, 0x1d, 0xc1, 0x95, 0xa4, 0x22, 0xf3, 0x43, 0xa0, 0xe2, 0x94,
	0x16, 0x99, 0x89, 0x33, 0xa7, 0xc5, 0x7f, 0x9d, 0x63, 0x66, 0x3c, 0xa6, 0x73, 0x9f, 0x7c, 0x8c,
	0x5e, 0x42, 0x2d, 0xc2, 0xae, 0x93, 0x8a, 0x66, 0xab, 0xd8, 0x6a, 0x84, 0xdd, 0xfb, 0xc2, 0x99,
	0x19, 0xea, 0xc1, 0xf9, 0xb3, 0xe9, 0x40, 0xab, 0x9c, 0xfc, 0x99, 0x32, 0x7d, 0x75, 0x5a, 0xa6,
	0xd7, 0xff, 0xa9, 0xe0, 0xf3, 0x7a, 0x7d, 0x06, 0x2a, 0xcf, 0x1f, 0xe9, 0xd0, 0x18, 0xad, 0x6c,
	0x7b, 0xb2, 0xb8, 0xeb, 0xbc, 0x40, 0x00, 0xf5, 0x77, 0xab, 0xd9, 0x72, 0x32, 0xee, 0x28, 0xbd,
	0xeb, 0xbc, 0xbd, 0x4b, 0xf3, 0xf2, 0x54, 0x77, 0x45, 0xf0, 0x2d, 0xeb, 0xde, 0xfb, 0xb3, 0x2e,
	0x1a, 0xac, 0xd4, 0x23, 0x5c, 0xaa, 0x00, 0xfb, 0x44, 0x50, 0xd7, 0x6c, 0x71, 0x46, 0x53, 0x68,
	0x51, 0x1f, 0x6f, 0x49, 0x21, 0x78, 0xde, 0x04, 0x6f, 0xfe, 0xbd, 0xd3, 0xac, 0x29, 0xbf, 0x2e,
	0xb3, 0xd0, 0xe9, 0xd1, 0x30, 0xff, 0xae, 0x81, 0x5e, 0x0a, 0xa2, 0x9f, 0xa0, 0xb9, 0x25, 0xa1,
	0x4f, 0x58, 0x9c, 0xc9, 0xfd, 0x32, 0xb8, 0x0c, 0xd6, 0xfa, 0x41, 0x3e, 0xb3, 0x0f, 0x00, 0x68,
	0x05, 0x2d, 0x59, 0x4d, 0xc7, 0xa3, 0x09, 0x93, 0x3c, 0x87, 0x17, 0x02, 0x4a, 0xed, 0xc7, 0x24,
	0x59, 0xdb, 0xba, 0xc4, 0x99, 0xd1, 0x84, 0xa1, 0xef, 0x40, 0x29, 0xf6, 0xcd, 0xdb, 0x0b, 0xb1,
	0xe6, 0x98, 0xc5, 0x34, 0xb5, 0xc3, 0xdf, 0x6d, 0x85, 0xaf, 0x41, 0xcd, 0xa3, 0x81, 0x43, 0x12,
	0xe6, 0x30, 0xd1, 0x35, 0xef, 0x83, 0xd3, 0xf0, 0x68, 0x30, 0x49, 0xd8, 0x1d, 0xef, 0xbf, 0xd4,
	0x89, 0xc2, 0xc4, 0xa8, 0xe5, 0xfd, 0x97, 0xbe, 0x0b, 0x13, 0xee, 0xcc, 0x84, 0xb3, 0x9e, 0x3b,
	0x33, 0xee, 0xbc, 0x01, 0x55, 0x14, 0xbe, 0x21, 0xa6, 0xea, 0x62, 0x19, 0xc2, 0x60, 0x1f, 0x7a,
	0x8f, 0x62, 0x15, 0x89, 0xf7, 0xe8, 0x73, 0x68, 0xfb, 0x38, 0x75, 0x5c, 0xba, 0xd9, 0x38, 0x09,
	0xdd, 0xfa, 0xd8, 0x68, 0x8a, 0x11, 0x6e, 0xf9, 0x38, 0x1d, 0xd3, 0xcd, 0x66, 0xc9, 0x7d, 0xe8,
	0x63, 0x68, 0x8a, 0xa0, 0xe3, 0x0d, 0x0d, 0x4d, 0xc4, 0x1b, 0xc2, 0x9e, 0x0d, 0xcd, 0x18, 0x9a,
	0x45, 0xb5, 0x50, 0x0b, 0x94, 0x40, 0xce, 0x85, 0x12, 0x70, 0xcb, 0x97, 0x93, 0xa7, 0xf8, 0xe8,
	0x43, 0xa8, 0x45, 0x94, 0xad, 0x77, 0x72, 0x45, 0xe4, 0x06, 0x07, 0x4e, 0x9d, 0x70, 0xb3, 0x49,
	0x08, 0x13, 0x0b, 0xa2, 0x62, 0x37, 0xd2, 0x5b, 0x61, 0xf2, 0x50, 0x56, 0x84, 0x6a, 0x79, 0x28,
	0xcb, 0x43, 0xe6, 0x35, 0xe8, 0xa5, 0x82, 0xf2, 0x81, 0xdc, 0x45, 0xc5, 0x02, 0xe0, 0x47, 0xde,
	0xe8, 0xbc, 0xc8, 0xf2, 0xdf, 0xc5, 0xd9, 0x7c, 0x05, 0xda, 0x41, 0x71, 0xce, 0x06, 0xc7, 0x31,
	0xce, 0xe4, 0xe0, 0xe4, 0x46, 0xef, 0x0d, 0xe8, 0x25, 0x85, 0x50, 0x13, 0xd4, 0xc5, 0xed, 0x62,
	0xd2, 0x79, 0x81, 0xae, 0x40, 0x1b, 0x4f, 0x6f, 0x6e, 0x56, 0xcb, 0xe9, 0xed, 0xa2, 0xa3, 0x7c,
	0xdf, 0xfc, 0xa5, 0x9e, 0x6b, 0xfd, 0x50, 0x17, 0xdf, 0xd7, 0xeb, 0x7f, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x03, 0x48, 0x56, 0xe5, 0x7d, 0x07, 0x00, 0x00,
}
