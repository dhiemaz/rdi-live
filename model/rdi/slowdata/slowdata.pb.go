// Copyright 2019 Radiation Detection and Imaging (RDI), LLC
// Use of this source code is governed by the BSD 3-clause
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/rdi/slowdata/slowdata.proto

package slowdata

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Temp struct {
	// values in C
	Som                  []float32 `protobuf:"fixed32,1,rep,packed,name=som,proto3" json:"som,omitempty"`
	Fem                  []float32 `protobuf:"fixed32,2,rep,packed,name=fem,proto3" json:"fem,omitempty"`
	Board                []float32 `protobuf:"fixed32,3,rep,packed,name=board,proto3" json:"board,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Temp) Reset()         { *m = Temp{} }
func (m *Temp) String() string { return proto.CompactTextString(m) }
func (*Temp) ProtoMessage()    {}
func (*Temp) Descriptor() ([]byte, []int) {
	return fileDescriptor_618683b605421ce4, []int{0}
}

func (m *Temp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Temp.Unmarshal(m, b)
}
func (m *Temp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Temp.Marshal(b, m, deterministic)
}
func (m *Temp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Temp.Merge(m, src)
}
func (m *Temp) XXX_Size() int {
	return xxx_messageInfo_Temp.Size(m)
}
func (m *Temp) XXX_DiscardUnknown() {
	xxx_messageInfo_Temp.DiscardUnknown(m)
}

var xxx_messageInfo_Temp proto.InternalMessageInfo

func (m *Temp) GetSom() []float32 {
	if m != nil {
		return m.Som
	}
	return nil
}

func (m *Temp) GetFem() []float32 {
	if m != nil {
		return m.Fem
	}
	return nil
}

func (m *Temp) GetBoard() []float32 {
	if m != nil {
		return m.Board
	}
	return nil
}

type Hv struct {
	DacValue             []uint32 `protobuf:"varint,1,rep,packed,name=dac_value,json=dacValue,proto3" json:"dac_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hv) Reset()         { *m = Hv{} }
func (m *Hv) String() string { return proto.CompactTextString(m) }
func (*Hv) ProtoMessage()    {}
func (*Hv) Descriptor() ([]byte, []int) {
	return fileDescriptor_618683b605421ce4, []int{1}
}

func (m *Hv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hv.Unmarshal(m, b)
}
func (m *Hv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hv.Marshal(b, m, deterministic)
}
func (m *Hv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hv.Merge(m, src)
}
func (m *Hv) XXX_Size() int {
	return xxx_messageInfo_Hv.Size(m)
}
func (m *Hv) XXX_DiscardUnknown() {
	xxx_messageInfo_Hv.DiscardUnknown(m)
}

var xxx_messageInfo_Hv proto.InternalMessageInfo

func (m *Hv) GetDacValue() []uint32 {
	if m != nil {
		return m.DacValue
	}
	return nil
}

func init() {
	proto.RegisterType((*Temp)(nil), "rdi.slowdata.Temp")
	proto.RegisterType((*Hv)(nil), "rdi.slowdata.Hv")
}

func init() { proto.RegisterFile("proto/rdi/slowdata/slowdata.proto", fileDescriptor_618683b605421ce4) }

var fileDescriptor_618683b605421ce4 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2c, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4a, 0xc9, 0xd4, 0x2f, 0xce, 0xc9, 0x2f, 0x4f, 0x49, 0x2c, 0x49, 0x84, 0x33,
	0xf4, 0xc0, 0x72, 0x42, 0x3c, 0x45, 0x29, 0x99, 0x7a, 0x30, 0x31, 0x25, 0x07, 0x2e, 0x96, 0x90,
	0xd4, 0xdc, 0x02, 0x21, 0x01, 0x2e, 0xe6, 0xe2, 0xfc, 0x5c, 0x09, 0x46, 0x05, 0x66, 0x0d, 0xa6,
	0x20, 0x10, 0x13, 0x24, 0x92, 0x96, 0x9a, 0x2b, 0xc1, 0x04, 0x11, 0x49, 0x4b, 0xcd, 0x15, 0x12,
	0xe1, 0x62, 0x4d, 0xca, 0x4f, 0x2c, 0x4a, 0x91, 0x60, 0x06, 0x8b, 0x41, 0x38, 0x4a, 0x8a, 0x5c,
	0x4c, 0x1e, 0x65, 0x42, 0xd2, 0x5c, 0x9c, 0x29, 0x89, 0xc9, 0xf1, 0x65, 0x89, 0x39, 0xa5, 0xa9,
	0x60, 0x53, 0x78, 0x83, 0x38, 0x52, 0x12, 0x93, 0xc3, 0x40, 0x7c, 0x27, 0xae, 0x28, 0x0e, 0x98,
	0x85, 0x49, 0x6c, 0x60, 0x57, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x13, 0xb4, 0x0d, 0x40,
	0xaa, 0x00, 0x00, 0x00,
}
